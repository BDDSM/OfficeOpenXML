
// Процедура - Новый документ в формате OOXML
//
// Параметры:
//  ИмяМакета			 - Строка - Наименования в общем макете
//  ДанныеПечати		 - Структура - Структура заполняемых парамертов в макете
//  ИмяПолучаемогоФайла	 - Строка - Наименование получаемого файла 
//
Процедура НовыйДокументВФорматеOOXML(ИмяМакета, ДанныеПечати, ИмяПолучаемогоФайла = "") Экспорт
	
	Если (НЕ ЗначениеЗаполнено(ИмяМакета)) ИЛИ ТипЗнч(ДанныеПечати) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	
	Если ПустаяСтрока(ИмяПолучаемогоФайла) Тогда
		ИмяПолучаемогоФайла = ПолучитьИмяВременногоФайла(".docx");	
	КонецЕсли;
	
	Состояние(НСтр("ru = 'Формирование печатной формы...'") + Символы.ПС + ИмяПолучаемогоФайла);
	Результат = OOXMLСервер.НовыйДокументOOXML(ИмяМакета, ДанныеПечати);
	
	Если НЕ ПроверитьРезультатВыполнения(Результат) Тогда
		Возврат;	
	КонецЕсли;
	
	Результат.Вставить("НачатьПолучениеФайла", ИмяПолучаемогоФайла);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("НачатьПолучениеФайла", ЭтотОбъект, Результат, "ОбработкаОшибки", ЭтотОбъект);
	НачатьПолучениеКаталогаВременныхФайлов(ОписаниеОповещения);
			
КонецПроцедуры

// Процедура - Новые документы в формате OOXML
//
// Параметры:
//  Документы - Массив - набор структур данных для печати, с ключами:
// 	 	* ИмяМакета 			- Строка - Наименования в общем макете
//   	* ДанныеПечати 			- Структура - Структура заполняемых парамертов в макете
//		* ИмяПолучаемогоФайла 	- Строка - Наименование получаемого файла
//  АрхивироватьВZip - Булево - Архивировать в архив zip или нет,
//									если нет тогда документы откроются из временного хранилища на клиенте
//
Процедура НовыеДокументыВФорматеOOXML(Документы, АрхивироватьВZip = Истина) Экспорт
	
	Если Документы.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	КоличествоДокументов = Документы.Количество();
	
	РасположениеФайловВХранилище = Новый Массив;
		
	Сч = 1;
	Для каждого стр ИЗ Документы Цикл
		Состояние(НСтр("ru = 'Формирование печатной формы...'") + Символы.ПС + Строка(стр.ИмяПолучаемогоФайла), Сч * 100 / КоличествоДокументов);
		
		Результат = OOXMLСервер.НовыйДокументOOXML(стр.ИмяМакета, стр.ДанныеПечати);
		
		Если НЕ ПроверитьРезультатВыполнения(Результат) Тогда
			ПоказатьОповещениеПользователя("Процедура завершена с ошибками, обратитесь в техническую поддержку");
			Возврат;	
		КонецЕсли;
				
		Результат.Вставить("ИмяПолучаемогоФайла", стр.ИмяПолучаемогоФайла);
		
		РасположениеФайловВХранилище.Добавить(Результат);
		
	Сч = Сч + 1;
	КонецЦикла;
	
	Если РасположениеФайловВХранилище.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если АрхивироватьВZip Тогда 
		ПоказатьОповещениеПользователя("Печатные формы успешно сформированы, выполняется архивирование.....");
		ОписаниеОповещения = Новый ОписаниеОповещения("НачатьАрхивированиеФайлов", ЭтотОбъект, РасположениеФайловВХранилище);
		НачатьПолучениеКаталогаВременныхФайлов(ОписаниеОповещения);
	Иначе
		ПоказатьОповещениеПользователя("Печатные формы успешно сформированы, выполняется открытие.....");
		ОписаниеОповещения = Новый ОписаниеОповещения("НачатьПолучениеФайловВХранилище", ЭтотОбъект, РасположениеФайловВХранилище);
		НачатьПолучениеКаталогаВременныхФайлов(ОписаниеОповещения);
	КонецЕсли;
	
КонецПроцедуры

#Область СлужебныеПроцедурыИФункции

Процедура НачатьПолучениеФайла(АдресКаталога, ДополнительныеПараметры) Экспорт
	
	ДвоичныеДанные = ПолучитьИзВременногоХранилища(ДополнительныеПараметры.АдресВоВременномХранилище);
		
	АдресИмяФайла = АдресКаталога + ДополнительныеПараметры.НачатьПолучениеФайла + ".docx";
	ДвоичныеДанные.Записать(АдресИмяФайла);
	
	УдалитьИзВременногоХранилища(ДополнительныеПараметры.АдресВоВременномХранилище);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("НачатьОткрытиеФайла", ЭтотОбъект, АдресИмяФайла);
	НачатьЗапускПриложения(ОписаниеОповещения, АдресИмяФайла);
	
КонецПроцедуры	

Процедура НачатьПолучениеФайловВХранилище(АдресКаталога, ДополнительныеПараметры) Экспорт
	
	Для каждого стр Из ДополнительныеПараметры Цикл
		
		ДвоичныеДанные = ПолучитьИзВременногоХранилища(стр.АдресВоВременномХранилище);
		
		АдресИмяФайла = АдресКаталога + стр.ИмяПолучаемогоФайла + ".docx";
		ДвоичныеДанные.Записать(АдресИмяФайла);
		
		УдалитьИзВременногоХранилища(стр.АдресВоВременномХранилище);
		
		ОписаниеОповещения = Новый ОписаниеОповещения("НачатьОткрытиеФайла", ЭтотОбъект, АдресИмяФайла);
		НачатьЗапускПриложения(ОписаниеОповещения, АдресИмяФайла);	
		
	КонецЦикла;
	
КонецПроцедуры

Процедура НачатьОткрытиеФайла(КодВозврата, ДополнительныеПараметры) Экспорт
	
КонецПроцедуры

Процедура НачатьОткрытиеАрхиваZip(КодВозврата, ДополнительныеПараметры) Экспорт
	
	ОписаниеОповещения = Новый ОписаниеОповещения("НачатьУдалениеВременныхФайлов", ЭтотОбъект);
	
	Для каждого стр ИЗ ДополнительныеПараметры Цикл 
		НачатьУдалениеФайлов(ОписаниеОповещения, стр);
	КонецЦикла;
	
КонецПроцедуры

Процедура НачатьАрхивированиеФайлов(АдресКаталога, ДополнительныеПараметры) Экспорт
	
	Если ДополнительныеПараметры.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	РасположениеВременныхФайлов = Новый Массив;
	
	Попытка 
		Для каждого стр ИЗ ДополнительныеПараметры Цикл
			ДвоичныеДанные = ПолучитьИзВременногоХранилища(стр.АдресВоВременномХранилище);	
			АдресИмяФайла = АдресКаталога + стр.ИмяПолучаемогоФайла + ".docx";
			ДвоичныеДанные.Записать(АдресИмяФайла);
			РасположениеВременныхФайлов.Добавить(АдресИмяФайла);
			УдалитьИзВременногоХранилища(стр.АдресВоВременномХранилище);		
		КонецЦикла;
	Исключение
		Возврат;
	КонецПопытки;
	
	Если РасположениеВременныхФайлов.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
		
	АдресИмяАрхива = АдресКаталога + "Комплект документов.zip";
	
	НовыйАрхив = Новый ЗаписьZipФайла(
        АдресИмяАрхива,
        "", // пароль на архив (оставим пустой)
        "Этот архив создан из 1С", // комментарий к архиву
        МетодСжатияZIP.Сжатие, // сжатие или копирование
        УровеньСжатияZIP.Оптимальный,
        МетодШифрованияZIP.Zip20
    );
	
	Для каждого стр Из РасположениеВременныхФайлов Цикл
		НовыйАрхив.Добавить(стр);	
	КонецЦикла;
	
	НовыйАрхив.Записать();
		
	ОписаниеОповещения = Новый ОписаниеОповещения("НачатьОткрытиеАрхиваZip", ЭтотОбъект, РасположениеВременныхФайлов);
	НачатьЗапускПриложения(ОписаниеОповещения, АдресИмяАрхива);
	
КонецПроцедуры

Процедура НачатьУдалениеВременныхФайлов(ДополнительныеПараметры) Экспорт
	
КонецПроцедуры

Процедура ОбработкаОшибки(АдресКаталога, ДополнительныеПараметры) Экспорт
	УдалитьИзВременногоХранилища(ДополнительныеПараметры.АдресВоВременномХранилище);
КонецПроцедуры

Функция ПроверитьРезультатВыполнения(Структура)
	
	Если (Структура.Свойство("АдресВоВременномХранилище")) 
		И (ЭтоАдресВременногоХранилища(Структура.АдресВоВременномХранилище)) Тогда	
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

#КонецОбласти